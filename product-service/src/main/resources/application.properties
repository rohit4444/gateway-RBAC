spring.application.name=product-service
server.port=8767

# database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.jpa.properties.hibernate.default_schema=ramancv2024
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#eureka.client.service-url.defaultZone=${eureka_url:http://localhost:8761/eureka}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true
#eureka.instance.hostname=10.8.0.141


# Eureka Client Configuration
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true

# Security Configuration for OAuth2 Resource Server
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/EL2/protocol/openid-connect/certs

# Logging Configuration
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n

# Management Endpoints Configuration
management.endpoints.web.exposure.include=*

#jwt.auth.converter.resource-id=spring-gateway-application-client
#jwt.auth.converter.principal-attribute=preferred_username

#security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/EL2
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/EL2/protocol/openid-connect/certs
